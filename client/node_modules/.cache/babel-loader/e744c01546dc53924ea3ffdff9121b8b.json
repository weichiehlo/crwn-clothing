{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBga-lnF3BxGocWw_2DLpQoeJ_oaXEsEok\",\n  authDomain: \"crwn-db-9d99d.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-9d99d.firebaseio.com\",\n  projectId: \"crwn-db-9d99d\",\n  storageBucket: \"crwn-db-9d99d.appspot.com\",\n  messagingSenderId: \"292875523106\",\n  appId: \"1:292875523106:web:9f84de84c474187ec2e67b\",\n  measurementId: \"G-7G03R226XM\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`us/andy`); // const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error createing user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAf,CAAhB,CAHwE,CAIxE;;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBT,QAA9B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAOH,KARD,CAQE,OAAMY,KAAN,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACH;AACJ;;AAED,SAAOd,OAAP;AAEH,CAzBM;AA2BPb,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBga-lnF3BxGocWw_2DLpQoeJ_oaXEsEok\",\r\n    authDomain: \"crwn-db-9d99d.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-9d99d.firebaseio.com\",\r\n    projectId: \"crwn-db-9d99d\",\r\n    storageBucket: \"crwn-db-9d99d.appspot.com\",\r\n    messagingSenderId: \"292875523106\",\r\n    appId: \"1:292875523106:web:9f84de84c474187ec2e67b\",\r\n    measurementId: \"G-7G03R226XM\"\r\n}\r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`us/andy`)\r\n    // const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get();\r\n    if(!snapShot.exists){\r\n        const { displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n\r\n        } catch(error){\r\n            console.log('error createing user', error.message)\r\n        }\r\n    }  \r\n\r\n    return userRef;\r\n\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}