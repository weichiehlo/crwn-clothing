{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess);\n  } catch (error) {\n    yield put(fetchCollectionsFailure);\n  } // collectionRef.get()\n  // .then(snapshot =>{\n  // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error=>dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/src/redux/shop/shop,sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAD,CAAT;AAEH,GAND,CAME,OAAMU,KAAN,EAAY;AACV,UAAMd,GAAG,CAACK,uBAAD,CAAT;AACH,GAXoC,CAerC;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUU,qBAAV,GAAiC;AACpC,QAAMjB,SAAS,CACXG,eAAe,CAACe,sBADL,EAEXV,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nimport { firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n    fetchCollectionsSuccess, \r\n    fetchCollectionsFailure\r\n} from './shop.actions'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired')\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess)\r\n\r\n    } catch(error){\r\n        yield put(fetchCollectionsFailure)\r\n    }\r\n    \r\n\r\n\r\n    // collectionRef.get()\r\n    // .then(snapshot =>{\r\n    // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    // dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    // }).catch(error=>dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTION_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}