{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/src/redux/shop/shop,sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CAACG,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AACjB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACC,GAJD,EAIGI,KAJH,CAISC,KAAK,IAAEH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAJxB;AAKH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMnB,SAAS,CACXC,eAAe,CAACmB,sBADL,EAEXlB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired')\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    collectionRef.get()\r\n    .then(snapshot =>{\r\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error=>dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTION_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}