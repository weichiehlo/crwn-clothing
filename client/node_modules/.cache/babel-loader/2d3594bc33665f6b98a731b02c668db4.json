{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAK;AACtCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADgB,CAAL,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAmB;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAiB;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,wBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAjB,CAAhC;AAKP,OAAO,MAAME,yBAAyB,GAAE,MAAI;AACxC,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AACjB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACC,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAEP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJxB;AAKH,GAVD;AAWH,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\nexport const fetchCollectionsStart = ()=>({\r\n    type: ShopActionTypes.FETCH_COLLECTION_START\r\n})\r\n\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap)=>({\r\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = (errorMessage)=>({\r\n    type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionStartAsync =()=>{\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        dispatch(fetchCollectionsStart())\r\n\r\n        collectionRef.get()\r\n        .then(snapshot =>{\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        }).catch(error=>dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}