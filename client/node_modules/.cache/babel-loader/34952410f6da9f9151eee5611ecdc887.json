{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.action';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAutehnticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAutehnticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n    yield getSnapShotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpsuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAutehnticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","onSignUpsuccess","SIGN_UP_SUCCESS","signInAfterSignUp","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n\r\n} from './user.action'\r\n\r\n\r\n\r\nexport function* getSnapShotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put(signInSuccess({id:userSnapShot.id, ...userSnapShot.data()}))\r\n\r\n    } catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapShotFromUserAuth(user)\r\n\r\n    } catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    )\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapShotFromUserAuth(user)\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* isUserAutehnticated(){\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapShotFromUserAuth(userAuth)\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAutehnticated)\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_OUT_START,\r\n        signOut\r\n    )\r\n}\r\n\r\nexport function* signUp({payload:{displayName,email,password}}){\r\n    try{\r\n        const { user } = yield auth.createUserWithEmailAndPassword(\r\n            email, \r\n            password\r\n        );\r\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n        yield getSnapShotFromUserAuth(user, {displayName});\r\n        \r\n\r\n\r\n    }catch(error){\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignUpsuccess (){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,\r\n        signInAfterSignUp)\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_START,\r\n        signUp\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}