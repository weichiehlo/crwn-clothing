{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weich\\\\Desktop\\\\Web\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButtom from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \" I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButtom, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: input => dispatch(signUpStart(input))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/weich/Desktop/Web/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButtom","connect","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","input"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButtom from '../custom-button/custom-button.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.action'\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) =>{\r\n    const [ userCredentials,setUserCredentials ] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    })\r\n    const {displayName, email, password, confirmPassword} = userCredentials\r\n\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n        if(password !== confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n            return\r\n        }\r\n        \r\n        signUpStart({displayName, email, password})\r\n\r\n    \r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        setUserCredentials({...userCredentials, [name]:value });\r\n    };\r\n    \r\n    return(\r\n        <div className='sign-up'>\r\n            <h2 className='title'> I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit= {handleSubmit}>\r\n                <FormInput \r\n                    type='text'\r\n                    name='displayName'\r\n                    value = { displayName }\r\n                    handleChange = {handleChange}\r\n                    label = 'Display Name'\r\n                    required/>\r\n                <FormInput \r\n                    type='email'\r\n                    name='email'\r\n                    value = { email }\r\n                    handleChange = {handleChange}\r\n                    label = 'Email'\r\n                    required/>\r\n                <FormInput \r\n                    type='password'\r\n                    name='password'\r\n                    value = { password }\r\n                    handleChange = {handleChange}\r\n                    label = 'Password'\r\n                    required/>\r\n                <FormInput \r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value = { confirmPassword }\r\n                    handleChange = {handleChange}\r\n                    label = 'Confirm Password'\r\n                    required/>\r\n\r\n                <CustomButtom type='submit'> SIGN UP</CustomButtom>\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: (input) => dispatch(signUpStart(input))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}